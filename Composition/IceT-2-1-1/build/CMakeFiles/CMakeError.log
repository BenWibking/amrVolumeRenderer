Determining size of __int64 failed with the following output:
Change Dir: /home/mgpeter/Documents/XViz/miniGraphics/Composition/IceT-2-1-1/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_1138d/fast"
/usr/bin/make -f CMakeFiles/cmTC_1138d.dir/build.make CMakeFiles/cmTC_1138d.dir/build
make[1]: Entering directory `/home/mgpeter/Documents/XViz/miniGraphics/Composition/IceT-2-1-1/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_1138d.dir/ICET_SIZEOF___INT64.c.o
/usr/bin/cc     -o CMakeFiles/cmTC_1138d.dir/ICET_SIZEOF___INT64.c.o   -c /home/mgpeter/Documents/XViz/miniGraphics/Composition/IceT-2-1-1/build/CMakeFiles/CheckTypeSize/ICET_SIZEOF___INT64.c
/home/mgpeter/Documents/XViz/miniGraphics/Composition/IceT-2-1-1/build/CMakeFiles/CheckTypeSize/ICET_SIZEOF___INT64.c:17:22: error: ‘__int64’ undeclared here (not in a function)
 #define SIZE (sizeof(__int64))
                      ^
/home/mgpeter/Documents/XViz/miniGraphics/Composition/IceT-2-1-1/build/CMakeFiles/CheckTypeSize/ICET_SIZEOF___INT64.c:19:12: note: in expansion of macro ‘SIZE’
   ('0' + ((SIZE / 10000)%10)),
            ^
make[1]: *** [CMakeFiles/cmTC_1138d.dir/ICET_SIZEOF___INT64.c.o] Error 1
make[1]: Leaving directory `/home/mgpeter/Documents/XViz/miniGraphics/Composition/IceT-2-1-1/build/CMakeFiles/CMakeTmp'
make: *** [cmTC_1138d/fast] Error 2

/home/mgpeter/Documents/XViz/miniGraphics/Composition/IceT-2-1-1/build/CMakeFiles/CheckTypeSize/ICET_SIZEOF___INT64.c:
#include <sys/types.h>
#include <stdint.h>
#include <stddef.h>


#undef KEY
#if defined(__i386)
# define KEY '_','_','i','3','8','6'
#elif defined(__x86_64)
# define KEY '_','_','x','8','6','_','6','4'
#elif defined(__ppc__)
# define KEY '_','_','p','p','c','_','_'
#elif defined(__ppc64__)
# define KEY '_','_','p','p','c','6','4','_','_'
#endif

#define SIZE (sizeof(__int64))
char info_size[] =  {'I', 'N', 'F', 'O', ':', 's','i','z','e','[',
  ('0' + ((SIZE / 10000)%10)),
  ('0' + ((SIZE / 1000)%10)),
  ('0' + ((SIZE / 100)%10)),
  ('0' + ((SIZE / 10)%10)),
  ('0' +  (SIZE    % 10)),
  ']',
#ifdef KEY
  ' ','k','e','y','[', KEY, ']',
#endif
  '\0'};

#ifdef __CLASSIC_C__
int main(argc, argv) int argc; char *argv[];
#else
int main(int argc, char *argv[])
#endif
{
  int require = 0;
  require += info_size[argc];
  (void)argv;
  return require;
}


